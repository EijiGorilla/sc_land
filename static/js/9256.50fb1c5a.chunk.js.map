{"version":3,"file":"static/js/9256.50fb1c5a.chunk.js","mappings":"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","sources":["components/HandedOverAreaChart.tsx"],"sourcesContent":["import { useRef, useState, useEffect, memo } from 'react';\r\nimport * as am5 from '@amcharts/amcharts5';\r\nimport * as am5xy from '@amcharts/amcharts5/xy';\r\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\r\nimport am5themes_Responsive from '@amcharts/amcharts5/themes/Responsive';\r\nimport { generateHandedOverAreaData } from '../Query';\r\n\r\n// Dispose function\r\nfunction maybeDisposeRoot(divId: any) {\r\n  am5.array.each(am5.registry.rootElements, function (root) {\r\n    if (root.dom.id === divId) {\r\n      root.dispose();\r\n    }\r\n  });\r\n}\r\n\r\nconst HandedOverAreaChart = memo(() => {\r\n  const chartRef = useRef<unknown | any | undefined>({});\r\n  const [lotHandedOverAreaData, setLotHandedOverAreaData] = useState([]);\r\n\r\n  const chartID = 'lot-handedover';\r\n  useEffect(() => {\r\n    generateHandedOverAreaData().then((result: any) => {\r\n      setLotHandedOverAreaData(result);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    maybeDisposeRoot(chartID);\r\n    var root = am5.Root.new(chartID);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    root.setThemes([am5themes_Animated.new(root), am5themes_Responsive.new(root)]);\r\n\r\n    // Create chart\r\n    var chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panX: false,\r\n        panY: false,\r\n        wheelX: 'panY',\r\n        wheelY: 'zoomY',\r\n        layout: root.verticalLayout,\r\n      }),\r\n    );\r\n    chartRef.current = chart;\r\n\r\n    chart.children.unshift(\r\n      am5.Label.new(root, {\r\n        text: 'Handed-Over Area (m2)',\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n        fill: am5.color('#ffffff'),\r\n        x: am5.percent(50),\r\n        centerX: am5.percent(50),\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n      }),\r\n    );\r\n\r\n    // Create axes\r\n    var yRenderer = am5xy.AxisRendererY.new(root, {\r\n      strokeOpacity: 1,\r\n      strokeWidth: 1,\r\n      stroke: am5.color('#ffffff'),\r\n    });\r\n\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.CategoryAxis.new(root, {\r\n        categoryField: 'category',\r\n        renderer: yRenderer,\r\n        tooltip: am5.Tooltip.new(root, {}),\r\n      }),\r\n    );\r\n\r\n    // Label properties Y axis\r\n    yAxis.get('renderer').labels.template.setAll({\r\n      //oversizedBehavior: \"wrap\",\r\n      textAlign: 'center',\r\n      fill: am5.color('#ffffff'),\r\n      //maxWidth: 150,\r\n      fontSize: 12,\r\n    });\r\n\r\n    yRenderer.grid.template.setAll({\r\n      location: 1,\r\n    });\r\n    yAxis.data.setAll(lotHandedOverAreaData);\r\n\r\n    // Set xaxis\r\n    var xRenderer = am5xy.AxisRendererX.new(root, {\r\n      strokeOpacity: 1,\r\n      strokeWidth: 1,\r\n      stroke: am5.color('#ffffff'),\r\n    });\r\n\r\n    // Remove xaxis labels\r\n    xRenderer.labels.template.set('visible', false);\r\n\r\n    var xAxis = chart.xAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        min: 0,\r\n        max: 100,\r\n        strictMinMax: true,\r\n        calculateTotals: true,\r\n        renderer: xRenderer,\r\n      }),\r\n    );\r\n\r\n    function makeSeries(name: any, fieldName: any) {\r\n      var series = chart.series.push(\r\n        am5xy.ColumnSeries.new(root, {\r\n          name: name,\r\n          stacked: true,\r\n          xAxis: xAxis,\r\n          yAxis: yAxis,\r\n          baseAxis: yAxis,\r\n          valueXShow: 'valueXTotalPercent',\r\n          valueXField: fieldName,\r\n          categoryYField: 'category',\r\n          fill: am5.color('#0070ff'),\r\n        }),\r\n      );\r\n\r\n      series.columns.template.setAll({\r\n        //tooltipText: \"{name}, {categoryY}: {valueX}%\",\r\n        //tooltipY: am5.percent(90)\r\n      });\r\n      series.data.setAll(lotHandedOverAreaData);\r\n\r\n      // Make stuff animate on load\r\n      // https://www.amcharts.com/docs/v5/concepts/animations/\r\n      series.appear();\r\n\r\n      series.bullets.push(function () {\r\n        return am5.Bullet.new(root, {\r\n          sprite: am5.Label.new(root, {\r\n            text: '{valueX}%',\r\n            fill: am5.color('#ffffff'), //root6.interfaceColors.get(\"alternativeText\"),\r\n            centerY: am5.p50,\r\n            centerX: am5.p50,\r\n            populateText: true,\r\n            fontSize: 12,\r\n          }),\r\n        });\r\n      });\r\n    }\r\n    makeSeries('Value', 'value');\r\n    chart.appear(1000, 100);\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, [chartID, lotHandedOverAreaData]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        id={chartID}\r\n        style={{\r\n          height: '80vh',\r\n          width: '30%',\r\n          backgroundColor: '#2b2b2b',\r\n          color: 'white',\r\n          position: 'absolute',\r\n          zIndex: 99,\r\n          bottom: 10,\r\n          marginLeft: '1vw',\r\n          marginRight: 'auto',\r\n        }}\r\n      ></div>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default HandedOverAreaChart;\r\n"],"names":["memo","chartRef","useRef","lotHandedOverAreaData","setLotHandedOverAreaData","useState","chartID","useEffect","generateHandedOverAreaData","then","result","_root$_logo","divId","am5","rootElements","root","dom","id","dispose","new","container","children","clear","_logo","setThemes","am5themes_Animated","am5themes_Responsive","chart","push","am5xy","panX","panY","wheelX","wheelY","layout","verticalLayout","current","unshift","text","fontSize","fontWeight","textAlign","fill","x","centerX","paddingTop","paddingBottom","yRenderer","strokeOpacity","strokeWidth","stroke","yAxis","yAxes","categoryField","renderer","tooltip","get","labels","template","setAll","grid","location","data","xRenderer","set","xAxis","xAxes","min","max","strictMinMax","calculateTotals","name","fieldName","series","stacked","baseAxis","valueXShow","valueXField","categoryYField","columns","appear","bullets","sprite","centerY","populateText","makeSeries","_jsx","_Fragment","style","height","width","backgroundColor","color","position","zIndex","bottom","marginLeft","marginRight"],"sourceRoot":""}