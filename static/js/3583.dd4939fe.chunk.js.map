{"version":3,"file":"static/js/3583.dd4939fe.chunk.js","mappings":"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","sources":["components/StructureChart.tsx"],"sourcesContent":["import { useEffect, useRef, useState, memo } from 'react';\r\nimport { structureLayer } from '../layers';\r\nimport { view } from '../Scene';\r\nimport FeatureFilter from '@arcgis/core/layers/support/FeatureFilter';\r\nimport Query from '@arcgis/core/rest/support/Query';\r\nimport * as am5 from '@amcharts/amcharts5';\r\nimport * as am5xy from '@amcharts/amcharts5/xy';\r\nimport * as am5percent from '@amcharts/amcharts5/percent';\r\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\r\nimport am5themes_Responsive from '@amcharts/amcharts5/themes/Responsive';\r\nimport {\r\n  generateStrucMoaData,\r\n  generateStrucNumber,\r\n  generateStructureData,\r\n  thousands_separators,\r\n} from '../Query';\r\n\r\nconst statusStructure = [\r\n  'Dismantling/Clearing',\r\n  'Paid',\r\n  'For Payment Processing',\r\n  'For Legal Pass',\r\n  'For Appraisal/Offer to Compensate',\r\n  'LBP Account Opening',\r\n];\r\n\r\nconst statusMoaStructure = ['For Negotiation', 'Expropriation', 'Donation', 'No Need to Acquire'];\r\n\r\n// Dispose function\r\nfunction maybeDisposeRoot(divId: any) {\r\n  am5.array.each(am5.registry.rootElements, function (root) {\r\n    if (root.dom.id === divId) {\r\n      root.dispose();\r\n    }\r\n  });\r\n}\r\n\r\n///*** Others */\r\n\r\n/// Draw chart\r\nconst StructureChart = memo(({ municipal, barangay }: any) => {\r\n  // 1. Structure\r\n  const pieSeriesRef = useRef<unknown | any | undefined>({});\r\n  const legendRef = useRef<unknown | any | undefined>({});\r\n  const chartRef = useRef<unknown | any | undefined>({});\r\n  const [structureData, setStructureData] = useState([\r\n    {\r\n      category: String,\r\n      value: Number,\r\n      sliceSettings: {\r\n        fill: am5.color('#00c5ff'),\r\n      },\r\n    },\r\n  ]);\r\n\r\n  const chartID = 'structure-chart';\r\n  const [structureNumber, setStructureNumber] = useState([]);\r\n\r\n  // 2.Mode of Acquisition\r\n  const barSeriesRef = useRef<unknown | any | undefined>({});\r\n  const yAxisRef = useRef<unknown | any | undefined>({});\r\n  const chartRef_moa = useRef<unknown | any | undefined>({});\r\n  const [structureMoaData, setStructureMoaData] = useState([\r\n    {\r\n      category: String,\r\n      value: Number,\r\n    },\r\n  ]);\r\n  const chartID_moa = 'structure-moa';\r\n\r\n  // Query\r\n  const queryMunicipality = \"Municipality = '\" + municipal + \"'\";\r\n  const queryBarangay = \"Barangay = '\" + barangay + \"'\";\r\n  const queryMunicipalBarangay = queryMunicipality + ' AND ' + queryBarangay;\r\n\r\n  if (municipal && !barangay) {\r\n    structureLayer.definitionExpression = queryMunicipality;\r\n  } else if (barangay) {\r\n    structureLayer.definitionExpression = queryMunicipalBarangay;\r\n  }\r\n\r\n  useEffect(() => {\r\n    generateStructureData().then((result: any) => {\r\n      setStructureData(result);\r\n    });\r\n\r\n    // Structure Number\r\n    generateStrucNumber().then((response: any) => {\r\n      setStructureNumber(response);\r\n    });\r\n\r\n    generateStrucMoaData().then((response: any) => {\r\n      setStructureMoaData(response);\r\n    });\r\n  }, [municipal, barangay]);\r\n\r\n  useEffect(() => {\r\n    // Dispose previously created root element\r\n\r\n    maybeDisposeRoot(chartID);\r\n\r\n    var root = am5.Root.new(chartID);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    // https://www.amcharts.com/docs/v5/concepts/themes/\r\n    root.setThemes([am5themes_Animated.new(root), am5themes_Responsive.new(root)]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/\r\n    var chart = root.container.children.push(\r\n      am5percent.PieChart.new(root, {\r\n        //centerY: am5.percent(-2), //-10\r\n        y: am5.percent(-25), // space between pie chart and total lots\r\n        layout: root.horizontalLayout,\r\n      }),\r\n    );\r\n    chartRef.current = chart;\r\n\r\n    // Create series\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series\r\n    var pieSeries = chart.series.push(\r\n      am5percent.PieSeries.new(root, {\r\n        name: 'Series',\r\n        categoryField: 'category',\r\n        valueField: 'value',\r\n        //legendLabelText: \"[{fill}]{category}[/]\",\r\n        legendValueText: \"{valuePercentTotal.formatNumber('#.')}% ({value})\",\r\n        radius: am5.percent(45), // outer radius\r\n        innerRadius: am5.percent(20),\r\n        marginBottom: -10,\r\n      }),\r\n    );\r\n    pieSeriesRef.current = pieSeries;\r\n    chart.series.push(pieSeries);\r\n\r\n    // Set slice opacity and stroke color\r\n    pieSeries.slices.template.setAll({\r\n      fillOpacity: 0.9,\r\n      stroke: am5.color('#ffffff'),\r\n      strokeWidth: 1,\r\n      strokeOpacity: 1,\r\n      templateField: 'sliceSettings',\r\n    });\r\n\r\n    // Disabling labels and ticksll\r\n    pieSeries.labels.template.set('visible', false);\r\n    pieSeries.ticks.template.set('visible', false);\r\n\r\n    // EventDispatcher is disposed at SpriteEventDispatcher...\r\n    // It looks like this error results from clicking events\r\n    pieSeries.slices.template.events.on('click', (ev) => {\r\n      var Selected: any = ev.target.dataItem?.dataContext;\r\n      var Category: string = Selected.category;\r\n\r\n      var highlightSelect: any;\r\n      var SelectedStatus: number | null;\r\n\r\n      if (Category === statusStructure[0]) {\r\n        SelectedStatus = 1;\r\n      } else if (Category === statusStructure[1]) {\r\n        SelectedStatus = 2;\r\n      } else if (Category === statusStructure[2]) {\r\n        SelectedStatus = 3;\r\n      } else if (Category === statusStructure[3]) {\r\n        SelectedStatus = 4;\r\n      } else if (Category === statusStructure[4]) {\r\n        SelectedStatus = 5;\r\n      } else if (Category === statusStructure[5]) {\r\n        SelectedStatus = 6;\r\n      }\r\n\r\n      var query = structureLayer.createQuery();\r\n\r\n      view.when(function () {\r\n        view.whenLayerView(structureLayer).then((layerView): any => {\r\n          //chartLayerView = layerView;\r\n\r\n          structureLayer.queryFeatures(query).then(function (results) {\r\n            const RESULT_LENGTH = results.features;\r\n            const ROW_N = RESULT_LENGTH.length;\r\n\r\n            let objID = [];\r\n            for (var i = 0; i < ROW_N; i++) {\r\n              var obj = results.features[i].attributes.OBJECTID;\r\n              objID.push(obj);\r\n            }\r\n\r\n            var queryExt = new Query({\r\n              objectIds: objID,\r\n            });\r\n\r\n            structureLayer.queryExtent(queryExt).then(function (result) {\r\n              if (result.extent) {\r\n                view.goTo(result.extent);\r\n              }\r\n            });\r\n\r\n            if (highlightSelect) {\r\n              highlightSelect.remove();\r\n            }\r\n            highlightSelect = layerView.highlight(objID);\r\n\r\n            view.on('click', function () {\r\n              layerView.filter = new FeatureFilter({\r\n                where: undefined,\r\n              });\r\n              highlightSelect.remove();\r\n            });\r\n          }); // End of queryFeatures\r\n\r\n          layerView.filter = new FeatureFilter({\r\n            where: 'StatusStruc = ' + SelectedStatus,\r\n          });\r\n        }); // End of view.whenLayerView\r\n      }); // End of view.whenv\r\n    });\r\n\r\n    pieSeries.data.setAll(structureData);\r\n\r\n    // Legend\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/legend-percent-series/\r\n    var legend = root.container.children.push(\r\n      am5.Legend.new(root, {\r\n        centerX: am5.percent(50),\r\n        x: am5.percent(50),\r\n        y: am5.percent(48),\r\n        layout: root.verticalLayout,\r\n      }),\r\n    );\r\n    legendRef.current = legend;\r\n    legend.data.setAll(pieSeries.dataItems);\r\n\r\n    // Change the size of legend markers\r\n    legend.markers.template.setAll({\r\n      width: 18,\r\n      height: 18,\r\n    });\r\n\r\n    // Change the marker shape\r\n    legend.markerRectangles.template.setAll({\r\n      cornerRadiusTL: 10,\r\n      cornerRadiusTR: 10,\r\n      cornerRadiusBL: 10,\r\n      cornerRadiusBR: 10,\r\n    });\r\n\r\n    // Responsive legend\r\n    // https://www.amcharts.com/docs/v5/tutorials/pie-chart-with-a-legend-with-dynamically-sized-labels/\r\n    // This aligns Legend to Left\r\n    chart.onPrivate('width', function (width: any) {\r\n      const boxWidth = 190; //props.style.width;\r\n      var availableSpace = Math.max(width - chart.height() - boxWidth, boxWidth);\r\n      //var availableSpace = (boxWidth - valueLabelsWidth) * 0.7\r\n      legend.labels.template.setAll({\r\n        width: availableSpace,\r\n        maxWidth: availableSpace,\r\n      });\r\n    });\r\n\r\n    // To align legend items: valueLabels right, labels to left\r\n    // 1. fix width of valueLabels\r\n    // 2. dynamically change width of labels by screen size\r\n\r\n    const valueLabelsWidth = 50;\r\n\r\n    // Change legend labelling properties\r\n    // To have responsive font size, do not set font size\r\n    legend.labels.template.setAll({\r\n      oversizedBehavior: 'truncate',\r\n      fill: am5.color('#ffffff'),\r\n      //textDecoration: \"underline\"\r\n      //width: am5.percent(200)\r\n      //fontWeight: \"300\"\r\n    });\r\n\r\n    legend.valueLabels.template.setAll({\r\n      textAlign: 'right',\r\n      width: valueLabelsWidth,\r\n      fill: am5.color('#ffffff'),\r\n      //fontSize: LEGEND_FONT_SIZE,\r\n    });\r\n\r\n    legend.itemContainers.template.setAll({\r\n      // set space between legend items\r\n      paddingTop: 1.1,\r\n      paddingBottom: 2,\r\n    });\r\n\r\n    pieSeries.appear(1000, 100);\r\n\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, [chartID, structureData]);\r\n\r\n  useEffect(() => {\r\n    pieSeriesRef.current?.data.setAll(structureData);\r\n    legendRef.current?.data.setAll(pieSeriesRef.current.dataItems);\r\n  });\r\n\r\n  // Mode of Acquisition\r\n  useEffect(() => {\r\n    // Dispose previously created root element\r\n    maybeDisposeRoot(chartID_moa);\r\n\r\n    var root = am5.Root.new(chartID_moa);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    // https://www.amcharts.com/docs/v5/concepts/themes/\r\n    root.setThemes([am5themes_Animated.new(root), am5themes_Responsive.new(root)]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n    var chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panX: false,\r\n        panY: false,\r\n        wheelX: 'none',\r\n        wheelY: 'none',\r\n        paddingLeft: 0,\r\n        marginTop: 20,\r\n        //height: am5.percent(81),\r\n      }),\r\n    );\r\n    chartRef_moa.current = chart;\r\n\r\n    // Create axes\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n    var yRenderer = am5xy.AxisRendererY.new(root, {\r\n      minGridDistance: 5,\r\n      strokeOpacity: 1,\r\n      strokeWidth: 1,\r\n      inversed: true,\r\n      stroke: am5.color('#ffffff'),\r\n    });\r\n    yRenderer.grid.template.set('location', 1);\r\n\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.CategoryAxis.new(root, {\r\n        maxDeviation: 0,\r\n        categoryField: 'category',\r\n        renderer: yRenderer,\r\n      }),\r\n    );\r\n\r\n    // Remove grid lines\r\n    yAxis.get('renderer').grid.template.set('forceHidden', true);\r\n\r\n    var xAxis = chart.xAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        maxDeviation: 0,\r\n        min: 0,\r\n        strictMinMax: true,\r\n        calculateTotals: true,\r\n        renderer: am5xy.AxisRendererX.new(root, {\r\n          visible: true,\r\n          strokeOpacity: 1,\r\n          strokeWidth: 1,\r\n          stroke: am5.color('#ffffff'),\r\n        }),\r\n      }),\r\n    );\r\n    // Remove grid lines\r\n    xAxis.get('renderer').grid.template.set('forceHidden', true);\r\n\r\n    // Label properties for yAxis (category axis)\r\n    yAxis.get('renderer').labels.template.setAll({\r\n      //oversizedBehavior: \"wrap\",\r\n      textAlign: 'center',\r\n      fill: am5.color('#ffffff'),\r\n      //maxWidth: 150,\r\n      fontSize: 12,\r\n    });\r\n\r\n    xAxis.get('renderer').labels.template.setAll({\r\n      fill: am5.color('#ffffff'),\r\n      fontSize: 10,\r\n    });\r\n\r\n    // Create series\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\n    var series = chart.series.push(\r\n      am5xy.ColumnSeries.new(root, {\r\n        name: 'Series 1',\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueXField: 'value',\r\n        sequencedInterpolation: true,\r\n        categoryYField: 'category',\r\n      }),\r\n    );\r\n    barSeriesRef.current = series;\r\n    chart.series.push(series);\r\n\r\n    var columnTemplate = series.columns.template;\r\n\r\n    columnTemplate.setAll({\r\n      draggable: true,\r\n      cursorOverStyle: 'pointer',\r\n      tooltipText: '{value}',\r\n      cornerRadiusBR: 10,\r\n      cornerRadiusTR: 10,\r\n      strokeOpacity: 0,\r\n    });\r\n\r\n    // Add Label bullet\r\n    series.bullets.push(function () {\r\n      return am5.Bullet.new(root, {\r\n        locationY: 1,\r\n        sprite: am5.Label.new(root, {\r\n          text: '{value}',\r\n          fill: root.interfaceColors.get('alternativeText'),\r\n          centerY: 8,\r\n          centerX: am5.p50,\r\n          fontSize: 13,\r\n          populateText: true,\r\n        }),\r\n      });\r\n    });\r\n\r\n    // Use different color by column\r\n    /*\r\n    columnTemplate.adapters.add('fill', (fill, target) => {\r\n      return chart.get('colors').getIndex(series.columns.indexOf(target));\r\n    });\r\n\r\n    columnTemplate.adapters.add('stroke', (stroke, target) => {\r\n      return chart.get('colors').getIndex(series.columns.indexOf(target));\r\n    });\r\n    */\r\n\r\n    series.columns.template.events.on('click', function (ev) {\r\n      var Selected: any = ev.target.dataItem?.dataContext;\r\n      var Category: string = Selected.category;\r\n\r\n      var highlightSelect: any;\r\n      var SelectedStatus: number | null;\r\n\r\n      if (Category === statusMoaStructure[0]) {\r\n        SelectedStatus = 1;\r\n      } else if (Category === statusMoaStructure[1]) {\r\n        SelectedStatus = 2;\r\n      } else if (Category === statusMoaStructure[2]) {\r\n        SelectedStatus = 3;\r\n      } else if (Category === statusMoaStructure[3]) {\r\n        SelectedStatus = 4;\r\n      }\r\n\r\n      var query = structureLayer.createQuery();\r\n      view.whenLayerView(structureLayer).then(function (layerView) {\r\n        //CHART_ELEMENT.style.visibility = \"visible\";\r\n\r\n        structureLayer.queryFeatures(query).then(function (results) {\r\n          const RESULT_LENGTH = results.features;\r\n          const ROW_N = RESULT_LENGTH.length;\r\n\r\n          let objID = [];\r\n          for (var i = 0; i < ROW_N; i++) {\r\n            var obj = results.features[i].attributes.OBJECTID;\r\n            objID.push(obj);\r\n          }\r\n\r\n          var queryExt = new Query({\r\n            objectIds: objID,\r\n          });\r\n\r\n          structureLayer.queryExtent(queryExt).then(function (result) {\r\n            if (result.extent) {\r\n              view.goTo(result.extent);\r\n            }\r\n          });\r\n\r\n          if (highlightSelect) {\r\n            highlightSelect.remove();\r\n          }\r\n          highlightSelect = layerView.highlight(objID);\r\n\r\n          view.on('click', function () {\r\n            layerView.filter = new FeatureFilter({\r\n              where: undefined,\r\n            });\r\n            highlightSelect.remove();\r\n          });\r\n        });\r\n        layerView.filter = new FeatureFilter({\r\n          where: 'MoA = ' + SelectedStatus,\r\n        });\r\n      }); // End of whenLayerView\r\n    });\r\n\r\n    // Chart title\r\n    chart.children.unshift(\r\n      am5.Label.new(root, {\r\n        text: 'MODE OF ACQUISITION',\r\n        fontSize: '1.1vw',\r\n        fontWeight: 'normal',\r\n        textAlign: 'left',\r\n        fill: am5.color('#f7f5f7'),\r\n        paddingTop: -21,\r\n        paddingLeft: 20,\r\n      }),\r\n    );\r\n\r\n    yAxisRef.current = yAxis;\r\n    yAxis.data.setAll(structureMoaData);\r\n    series.data.setAll(structureMoaData);\r\n\r\n    // Make stuff animate on load\r\n    // https://www.amcharts.com/docs/v5/concepts/animations/\r\n    series.appear(1000);\r\n    chart.appear(1000, 100);\r\n\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, [chartID_moa, structureMoaData]);\r\n\r\n  useEffect(() => {\r\n    barSeriesRef.current?.data.setAll(structureMoaData);\r\n    yAxisRef.current?.data.setAll(structureMoaData);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"lotNumberImage\">\r\n        <div>\r\n          <div className=\"totalStructuresLabel\">TOTAL STRUCTURES </div>\r\n          <br />\r\n          <br />\r\n          <b className=\"totalLotsNumber\">{thousands_separators(structureNumber[2])} </b>\r\n        </div>\r\n        <img\r\n          src=\"https://EijiGorilla.github.io/Symbols/House_Logo.svg\"\r\n          alt=\"Structure Logo\"\r\n          height={'19%'}\r\n          width={'19%'}\r\n          style={{ padding: '10px', margin: 'auto' }}\r\n        />\r\n      </div>\r\n      <div\r\n        id={chartID}\r\n        style={{\r\n          height: '45vh',\r\n          backgroundColor: 'rgb(0,0,0,0)',\r\n          color: 'white',\r\n          marginBottom: '-1.5vh',\r\n        }}\r\n      ></div>\r\n      <div className=\"pteNumberImage\">\r\n        <div>\r\n          <div className=\"permitToEnterLabel\">PERMIT-TO-ENTER</div>\r\n          <br />\r\n          <br />\r\n          {/* If zero, display as zero else */}\r\n          {structureNumber[1] === 0 ? (\r\n            <b className=\"permitToEnterNumber\">{structureNumber[0]}% (0)</b>\r\n          ) : (\r\n            <b className=\"permitToEnterNumber\">\r\n              {structureNumber[0]}% ({thousands_separators(structureNumber[1])})\r\n            </b>\r\n          )}\r\n        </div>\r\n        <img\r\n          src=\"https://EijiGorilla.github.io/Symbols/Permit-To-Enter.png\"\r\n          alt=\"Structure Logo\"\r\n          height={'18%'}\r\n          width={'18%'}\r\n          style={{ padding: '10px', margin: 'auto' }}\r\n        />\r\n      </div>\r\n      <div\r\n        id={chartID_moa}\r\n        style={{\r\n          height: '21vh',\r\n          backgroundColor: 'rgb(0,0,0,0)',\r\n          color: 'white',\r\n        }}\r\n      ></div>\r\n    </>\r\n  );\r\n}); // End of lotChartgs\r\n\r\nexport default StructureChart;\r\n"],"names":["statusStructure","statusMoaStructure","maybeDisposeRoot","divId","am5","rootElements","root","dom","id","dispose","memo","_ref","municipal","barangay","pieSeriesRef","useRef","legendRef","chartRef","structureData","setStructureData","useState","category","String","value","Number","sliceSettings","fill","chartID","structureNumber","setStructureNumber","barSeriesRef","yAxisRef","chartRef_moa","structureMoaData","setStructureMoaData","chartID_moa","queryMunicipality","queryMunicipalBarangay","structureLayer","definitionExpression","useEffect","generateStructureData","then","result","generateStrucNumber","response","generateStrucMoaData","_root$_logo","new","container","children","clear","_logo","setThemes","am5themes_Animated","am5themes_Responsive","chart","push","am5percent","y","layout","horizontalLayout","current","pieSeries","series","name","categoryField","valueField","legendValueText","radius","innerRadius","marginBottom","slices","template","setAll","fillOpacity","stroke","strokeWidth","strokeOpacity","templateField","labels","set","ticks","events","on","ev","_ev$target$dataItem","highlightSelect","SelectedStatus","Category","target","dataItem","dataContext","query","createQuery","view","when","whenLayerView","layerView","queryFeatures","results","ROW_N","features","length","objID","i","obj","attributes","OBJECTID","queryExt","Query","objectIds","queryExtent","extent","goTo","remove","highlight","filter","FeatureFilter","where","undefined","data","legend","centerX","x","verticalLayout","dataItems","markers","width","height","markerRectangles","cornerRadiusTL","cornerRadiusTR","cornerRadiusBL","cornerRadiusBR","onPrivate","availableSpace","Math","max","maxWidth","oversizedBehavior","valueLabels","textAlign","itemContainers","paddingTop","paddingBottom","appear","_pieSeriesRef$current","_legendRef$current","_root$_logo2","am5xy","panX","panY","wheelX","wheelY","paddingLeft","marginTop","yRenderer","minGridDistance","inversed","grid","yAxis","yAxes","maxDeviation","renderer","get","xAxis","xAxes","min","strictMinMax","calculateTotals","visible","fontSize","valueXField","sequencedInterpolation","categoryYField","columns","draggable","cursorOverStyle","tooltipText","bullets","locationY","sprite","text","interfaceColors","centerY","populateText","_ev$target$dataItem2","unshift","fontWeight","_barSeriesRef$current","_yAxisRef$current","_jsxs","_Fragment","className","_jsx","thousands_separators","src","alt","style","padding","margin","backgroundColor","color"],"sourceRoot":""}