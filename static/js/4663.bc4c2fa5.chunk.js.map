{"version":3,"file":"static/js/4663.bc4c2fa5.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/core/render/Scrollbar.ts","../node_modules/src/.internal/charts/xy/XYChartScrollbar.ts","../node_modules/src/.internal/charts/xy/axes/DateAxis.ts","components/LotProgressChart.tsx"],"sourcesContent":["import type { Animation } from \"../util/Entity\";\nimport type { Time } from \"../util/Animation\";\n\nimport { RoundedRectangle } from \"../render/RoundedRectangle\";\nimport { Container, IContainerPrivate, IContainerSettings, IContainerEvents } from \"./Container\";\nimport { Graphics } from \"./Graphics\";\nimport { Button } from \"./Button\";\n\nimport * as $type from \"../util/Type\";\nimport * as $utils from \"../util/Utils\";\n\nexport interface IScrollbarSettings extends IContainerSettings {\n\n\t/**\n\t * Orientation of the scrollbar.\n\t */\n\torientation: \"horizontal\" | \"vertical\";\n\n\t/**\n\t * Relative start of the selected range, with 0 meaning beginning, and 1 the\n\t * end.\n\t */\n\tstart?: number;\n\n\t/**\n\t * Relative end of the selected range, with 0 meaning beginning, and 1 the\n\t * end.\n\t */\n\tend?: number;\n\n\t/**\n\t * Number of milliseconds to play scroll animations for.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * Easing function to use for animations.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t */\n\tanimationEasing?: (t: Time) => Time;\n\n}\n\nexport interface IScrollbarPrivate extends IContainerPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tisBusy?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tpositionTextFunction?: (position: number) => string;\n\n}\n\nexport interface IScrollbarEvents extends IContainerEvents {\n\n\t/**\n\t * Invoked when range of the selection changes.\n\t */\n\trangechanged: { start: number, end: number, grip?: \"start\" | \"end\" };\n\n}\n\n/**\n * A control that allows zooming chart's axes, or other uses requiring range\n * selection.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n */\nexport class Scrollbar extends Container {\n\n\tpublic _addOrientationClass() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", this._settings.orientation]);\n\t\tif (!this._settings.background) {\n\t\t\tthis._settings.background = RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(this._settings.themeTags, [\"main\", \"background\"])\n\t\t\t});\n\t\t}\n\t}\n\n\tdeclare public _settings: IScrollbarSettings;\n\tdeclare public _privateSettings: IScrollbarPrivate;\n\tdeclare public _events: IScrollbarEvents;\n\n\tpublic static className: string = \"Scrollbar\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Scrollbar.className]);\n\n\t/**\n\t * A thumb elment - a draggable square between the grips, used for panning\n\t * the selection.\n\t */\n\tpublic thumb: RoundedRectangle = this._makeThumb();\n\n\t/**\n\t * Start grip button.\n\t */\n\tpublic startGrip: Button = this._makeButton();\n\n\t/**\n\t * End grip button.\n\t */\n\tpublic endGrip: Button = this._makeButton();\n\n\tprotected _thumbBusy: boolean = false;\n\n\tprotected _startDown: boolean = false;\n\n\tprotected _endDown: boolean = false;\n\n\tprotected _thumbDown: boolean = false;\n\n\tprotected _gripDown?: \"start\" | \"end\";\n\n\tprotected _makeButton(): Button {\n\t\treturn this.children.push(Button.new(this._root, {\n\t\t\tthemeTags: [\"resize\", \"button\", this.get(\"orientation\")], icon: Graphics.new(this._root, {\n\t\t\t\tthemeTags: [\"icon\"]\n\t\t\t})\n\t\t}));\n\t}\n\n\tprotected _makeThumb(): RoundedRectangle {\n\t\treturn this.children.push(RoundedRectangle.new(this._root, {\n\t\t\tthemeTags: [\"thumb\", this.get(\"orientation\")]\n\t\t}));\n\t}\n\n\tprotected _handleAnimation(animation: Animation<any>) {\n\t\tif (animation) {\n\t\t\tthis._disposers.push(\n\t\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\t\tthis.setPrivateRaw(\"isBusy\", false);\n\t\t\t\t\tthis._thumbBusy = false;\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tsuper._afterNew();\n\n\t\tconst startGrip = this.startGrip;\n\t\tconst endGrip = this.endGrip;\n\t\tconst thumb = this.thumb;\n\t\tconst background = this.get(\"background\");\n\n\t\tif (background) {\n\t\t\tthis._disposers.push(\n\t\t\t\tbackground.events.on(\"click\", (event) => {\n\t\t\t\t\tthis.setPrivateRaw(\"isBusy\", true);\n\t\t\t\t\tconst point = this._display.toLocal(event.point);\n\n\t\t\t\t\tconst w = this.width();\n\t\t\t\t\tconst h = this.height();\n\n\t\t\t\t\tconst orientation = this.get(\"orientation\");\n\n\t\t\t\t\tlet newMiddle: number;\n\n\t\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\t\tnewMiddle = (point.y - thumb.height() / 2) / h;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnewMiddle = (point.x - thumb.width() / 2) / w;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newCoordinate: number;\n\t\t\t\t\tlet key: \"x\" | \"y\";\n\n\t\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\t\tnewCoordinate = newMiddle * h;\n\t\t\t\t\t\tkey = \"y\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnewCoordinate = newMiddle * w;\n\t\t\t\t\t\tkey = \"x\";\n\t\t\t\t\t}\n\n\n\t\t\t\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\t\t\t\tif (duration > 0) {\n\t\t\t\t\t\tthis._thumbBusy = true;\n\t\t\t\t\t\tthis._handleAnimation(this.thumb.animate({ key: key, to: newCoordinate, duration: duration, easing: this.get(\"animationEasing\") }));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.thumb.set(key, newCoordinate);\n\t\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"isBusy\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\n\t\tthis._disposers.push(thumb.events.on(\"dblclick\", (event) => {\n\n\t\t\tif (!$utils.isLocalEvent(event.originalEvent, this)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\t\tconst easing = this.get(\"animationEasing\");\n\n\t\t\tthis.animate({ key: \"start\", to: 0, duration: duration, easing: easing });\n\t\t\tthis.animate({ key: \"end\", to: 1, duration: duration, easing: easing });\n\t\t}));\n\n\t\tthis._disposers.push(startGrip.events.on(\"pointerdown\", () => {\n\t\t\tthis.setPrivateRaw(\"isBusy\", true);\n\t\t\tthis._startDown = true;\n\t\t\tthis._gripDown = \"start\";\n\t\t}))\n\n\t\tthis._disposers.push(endGrip.events.on(\"pointerdown\", () => {\n\t\t\tthis.setPrivateRaw(\"isBusy\", true);\n\t\t\tthis._endDown = true;\n\t\t\tthis._gripDown = \"end\";\n\t\t}))\n\n\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", () => {\n\t\t\tthis.setPrivateRaw(\"isBusy\", true);\n\t\t\tthis._thumbDown = true;\n\t\t\tthis._gripDown = undefined;\n\t\t}))\n\n\t\tthis._disposers.push(startGrip.events.on(\"globalpointerup\", () => {\n\t\t\tif (this._startDown) {\n\t\t\t\tthis.setPrivateRaw(\"isBusy\", false);\n\t\t\t}\n\t\t\tthis._startDown = false;\n\t\t}))\n\n\t\tthis._disposers.push(endGrip.events.on(\"globalpointerup\", () => {\n\t\t\tif (this._endDown) {\n\t\t\t\tthis.setPrivateRaw(\"isBusy\", false);\n\t\t\t}\n\t\t\tthis._endDown = false;\n\t\t}))\n\n\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", () => {\n\t\t\tif (this._thumbDown) {\n\t\t\t\tthis.setPrivateRaw(\"isBusy\", false);\n\t\t\t}\n\t\t\tthis._thumbDown = false;\n\t\t}))\n\n\t\tthis._disposers.push(startGrip.on(\"x\", () => {\n\t\t\tthis._updateThumb();\n\t\t}));\n\n\t\tthis._disposers.push(endGrip.on(\"x\", () => {\n\t\t\tthis._updateThumb();\n\t\t}));\n\n\t\tthis._disposers.push(startGrip.on(\"y\", () => {\n\t\t\tthis._updateThumb();\n\t\t}));\n\n\t\tthis._disposers.push(endGrip.on(\"y\", () => {\n\t\t\tthis._updateThumb();\n\t\t}));\n\n\t\tthis._disposers.push(thumb.events.on(\"positionchanged\", () => {\n\t\t\tthis._updateGripsByThumb();\n\t\t}));\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\tstartGrip.set(\"x\", 0);\n\t\t\tendGrip.set(\"x\", 0);\n\n\t\t\tthis._disposers.push(thumb.adapters.add(\"y\", (value) => {\n\t\t\t\treturn Math.max(Math.min(Number(value), this.height() - thumb.height()), 0);\n\t\t\t}))\n\n\t\t\tthis._disposers.push(thumb.adapters.add(\"x\", (_value) => {\n\t\t\t\treturn this.width() / 2;\n\t\t\t}))\n\n\t\t\tthis._disposers.push(startGrip.adapters.add(\"x\", (_value) => {\n\t\t\t\treturn this.width() / 2;\n\t\t\t}))\n\n\t\t\tthis._disposers.push(endGrip.adapters.add(\"x\", (_value) => {\n\t\t\t\treturn this.width() / 2;\n\t\t\t}))\n\n\t\t\tthis._disposers.push(startGrip.adapters.add(\"y\", (value) => {\n\t\t\t\treturn Math.max(Math.min(Number(value), this.height()), 0);\n\t\t\t}))\n\n\t\t\tthis._disposers.push(endGrip.adapters.add(\"y\", (value) => {\n\t\t\t\treturn Math.max(Math.min(Number(value), this.height()), 0);\n\t\t\t}))\n\t\t}\n\t\telse {\n\t\t\tstartGrip.set(\"y\", 0);\n\t\t\tendGrip.set(\"y\", 0);\n\n\t\t\tthis._disposers.push(thumb.adapters.add(\"x\", (value) => {\n\t\t\t\treturn Math.max(Math.min(Number(value), this.width() - thumb.width()), 0);\n\t\t\t}))\n\n\t\t\tthis._disposers.push(thumb.adapters.add(\"y\", (_value) => {\n\t\t\t\treturn this.height() / 2;\n\t\t\t}))\n\n\t\t\tthis._disposers.push(startGrip.adapters.add(\"y\", (_value) => {\n\t\t\t\treturn this.height() / 2;\n\t\t\t}))\n\n\t\t\tthis._disposers.push(endGrip.adapters.add(\"y\", (_value) => {\n\t\t\t\treturn this.height() / 2;\n\t\t\t}))\n\n\t\t\tthis._disposers.push(startGrip.adapters.add(\"x\", (value) => {\n\t\t\t\treturn Math.max(Math.min(Number(value), this.width()), 0);\n\t\t\t}))\n\n\t\t\tthis._disposers.push(endGrip.adapters.add(\"x\", (value) => {\n\t\t\t\treturn Math.max(Math.min(Number(value), this.width()), 0);\n\t\t\t}))\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"end\") || this.isDirty(\"start\") || this._sizeDirty) {\n\t\t\tthis.updateGrips();\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tconst eventType = \"rangechanged\";\n\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, start: this.get(\"start\", 0), end: this.get(\"end\", 1), grip: this._gripDown });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrips() {\n\t\tconst startGrip = this.startGrip;\n\t\tconst endGrip = this.endGrip;\n\n\t\tconst orientation = this.get(\"orientation\");\n\t\tconst height = this.height();\n\t\tconst width = this.width();\n\n\t\tif (orientation == \"vertical\") {\n\t\t\tstartGrip.set(\"y\", height * this.get(\"start\", 0));\n\t\t\tendGrip.set(\"y\", height * this.get(\"end\", 1));\n\t\t}\n\t\telse {\n\t\t\tstartGrip.set(\"x\", width * this.get(\"start\", 0));\n\t\t\tendGrip.set(\"x\", width * this.get(\"end\", 1));\n\t\t}\n\n\t\tconst valueFunction = this.getPrivate(\"positionTextFunction\");\n\t\tconst from = Math.round(this.get(\"start\", 0) * 100);\n\t\tconst to = Math.round(this.get(\"end\", 0) * 100);\n\t\tlet fromValue: string;\n\t\tlet toValue: string;\n\t\tif (valueFunction) {\n\t\t\tfromValue = valueFunction.call(this, this.get(\"start\", 0));\n\t\t\ttoValue = valueFunction.call(this, this.get(\"end\", 0));\n\t\t}\n\t\telse {\n\t\t\tfromValue = from + \"%\";\n\t\t\ttoValue = to + \"%\";\n\t\t}\n\n\t\tstartGrip.set(\"ariaLabel\", this._t(\"From %1\", undefined, fromValue));\n\t\tstartGrip.set(\"ariaValueNow\", \"\" + from);\n\t\tstartGrip.set(\"ariaValueText\", from + \"%\");\n\n\t\tstartGrip.set(\"ariaValueMin\", \"0\");\n\t\tstartGrip.set(\"ariaValueMax\", \"100\");\n\n\t\tendGrip.set(\"ariaLabel\", this._t(\"To %1\", undefined, toValue));\n\t\tendGrip.set(\"ariaValueNow\", \"\" + to);\n\t\tendGrip.set(\"ariaValueText\", to + \"%\");\n\n\t\tendGrip.set(\"ariaValueMin\", \"0\");\n\t\tendGrip.set(\"ariaValueMax\", \"100\");\n\t}\n\n\tprotected _updateThumb() {\n\t\tconst thumb = this.thumb;\n\t\tconst startGrip = this.startGrip;\n\t\tconst endGrip = this.endGrip;\n\n\t\tconst height = this.height();\n\t\tconst width = this.width();\n\n\t\tlet x0 = startGrip.x();\n\t\tlet x1 = endGrip.x();\n\n\t\tlet y0 = startGrip.y();\n\t\tlet y1 = endGrip.y();\n\n\t\tlet start: number = 0;\n\t\tlet end: number = 1;\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\tif ($type.isNumber(y0) && $type.isNumber(y1)) {\n\t\t\t\tif (!this._thumbBusy && !thumb.isDragging()) {\n\t\t\t\t\tthumb.set(\"height\", y1 - y0);\n\t\t\t\t\tthumb.set(\"y\", y0);\n\t\t\t\t}\n\t\t\t\tstart = y0 / height;\n\t\t\t\tend = y1 / height;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif ($type.isNumber(x0) && $type.isNumber(x1)) {\n\t\t\t\tif (!this._thumbBusy && !thumb.isDragging()) {\n\t\t\t\t\tthumb.set(\"width\", x1 - x0);\n\t\t\t\t\tthumb.set(\"x\", x0);\n\t\t\t\t}\n\t\t\t\tstart = x0 / width;\n\t\t\t\tend = x1 / width;\n\t\t\t}\n\t\t}\n\n\t\tif (this.getPrivate(\"isBusy\") && (this.get(\"start\") != start || this.get(\"end\") != end)) {\n\t\t\tthis.set(\"start\", start);\n\t\t\tthis.set(\"end\", end);\n\t\t}\n\n\t\tconst valueFunction = this.getPrivate(\"positionTextFunction\");\n\t\tconst from = Math.round(this.get(\"start\", 0) * 100);\n\t\tconst to = Math.round(this.get(\"end\", 0) * 100);\n\t\tlet fromValue: string;\n\t\tlet toValue: string;\n\t\tif (valueFunction) {\n\t\t\tfromValue = valueFunction.call(this, this.get(\"start\", 0));\n\t\t\ttoValue = valueFunction.call(this, this.get(\"end\", 0));\n\t\t}\n\t\telse {\n\t\t\tfromValue = from + \"%\";\n\t\t\ttoValue = to + \"%\";\n\t\t}\n\n\t\tthumb.set(\"ariaLabel\", this._t(\"From %1 to %2\", undefined, fromValue, toValue));\n\t\tthumb.set(\"ariaValueNow\", \"\" + from);\n\t\tthumb.set(\"ariaValueText\", from + \"%\");\n\t}\n\n\n\tprotected _updateGripsByThumb() {\n\n\t\tconst thumb = this.thumb;\n\t\tconst startGrip = this.startGrip;\n\t\tconst endGrip = this.endGrip;\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\tconst thumbSize = thumb.height();\n\t\t\tstartGrip.set(\"y\", thumb.y());\n\t\t\tendGrip.set(\"y\", thumb.y() + thumbSize);\n\t\t}\n\t\telse {\n\t\t\tconst thumbSize = thumb.width();\n\t\t\tstartGrip.set(\"x\", thumb.x());\n\t\t\tendGrip.set(\"x\", thumb.x() + thumbSize);\n\t\t}\n\t}\n}\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport type { TimeUnit } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `startLocation` is not supported by [[GaplessDateAxis]].\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `endLocation` is not supported by [[GaplessDateAxis]].\n\t * \n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `-1` to `1`.\n\t *\n\t * If not set, it will use `tooltipLocation` value, if `tooltipLocation`` is\n\t * not set, it will use -0.5.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Current grid interval.\n\t */\n\tgridInterval: ITimeInterval;\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n\n\t/**\n\t * Kicks in when data grouping is on, and current group interval changes, e.g. via zooming the chart.\n\t *\n\t * @since 5.2.43\n\t */\n\tgroupintervalchanged: {}\n\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _seriesDataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tprotected _intervalMax: { [index: string]: number } = {};\n\tprotected _intervalMin: { [index: string]: number } = {};\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tconst maxZoomFactor = this.get(\"maxZoomFactor\");\n\t\tif (maxZoomFactor != null && maxZoomFactor != Infinity) {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", maxZoomFactor);\n\t\t}\n\t\telse {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t\t}\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t\tseries.resetGrouping();\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\n\t\t\tthis._dataGrouped = true; // helps to avoid double grouping\n\n\t\t\tthis._seriesDataGrouped = true;\n\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\tconst groupCallback = series.get(\"groupDataCallback\");\n\t\t\tlet groupOriginals = series.get(\"groupDataWithOriginals\", false);\n\t\t\tif (groupCallback) {\n\t\t\t\tgroupOriginals = true;\n\t\t\t}\n\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\n\t\t\t$array.each(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstDate: Date;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstDate = new Date(dataItems[0].get(key as any));\n\t\t\t\t}\n\n\t\t\t\tlet prevNewDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\tlet roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, firstDay, utc, firstDate, timezone).getTime();\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field] = 1;\n\t\t\t\t\t\t\t\tsum[field] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.set(\"originals\", [dataItem]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprevNewDataItem = newDataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value != null) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.get(\"originals\")!.push(dataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\t/**\n\t * Returns a time interval axis would group data to for a specified duration.\n\t *\n\t * @since 5.2.1\n\t */\n\tpublic getGroupInterval(duration: number): ITimeInterval {\n\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\tlet groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\")!);\n\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\tgroupInterval = { ...baseInterval };\n\t\t}\n\t\treturn groupInterval;\n\t}\n\n\t/**\n\t * Return `max` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Max\n\t */\n\tpublic getIntervalMax(interval: ITimeInterval): number {\n\t\treturn this._intervalMax[interval.timeUnit + interval.count];\n\t}\n\n\t/**\n\t * Return `min` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Min\n\t */\n\tpublic getIntervalMin(interval: ITimeInterval): number {\n\t\treturn this._intervalMin[interval.timeUnit + interval.count];\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tlet selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\tlet selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"endLocation\") == 0) {\n\t\t\t\tselectionMax += 1;\n\t\t\t}\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tgroupInterval = this.getGroupInterval(modifiedDifference);\n\t\t\t\t}\n\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\n\t\t\t\t\tthis._seriesDataGrouped = false;\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\n\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tthis.markDirtyExtremes();\n\n\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\t\tconst type = \"groupintervalchanged\";\n\t\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getFirstSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet startIndex = start.index;\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMax += this.baseDuration() * (1 - this.get(\"endLocation\", 1));\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet endIndex = end.index;\n\t\t\t\t\tlet endIndex2 = endIndex;\n\n\t\t\t\t\tif (endIndex2 > 1) {\n\t\t\t\t\t\tendIndex2--;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst firstDataItem = series.dataItems[startIndex];\n\t\t\t\t\tconst lastDataItem = series.dataItems[endIndex2];\n\n\t\t\t\t\tlet lastDate: number | undefined;\n\t\t\t\t\tlet firstDate: number | undefined;\n\t\t\t\t\tif (firstDataItem) {\n\t\t\t\t\t\tfirstDate = firstDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastDataItem) {\n\t\t\t\t\t\tlastDate = lastDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet outOfSelection = false;\n\t\t\t\t\tif (lastDate != null && firstDate != null) {\n\t\t\t\t\t\tif (lastDate < selectionMin || firstDate > selectionMax) {\n\t\t\t\t\t\t\toutOfSelection = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tseries.setPrivate(\"outOfSelection\", outOfSelection);\n\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _saveMinMax(min: number, max: number) {\n\t\tlet groupInterval = this.getPrivate(\"groupInterval\");\n\n\t\tif (!groupInterval) {\n\t\t\tgroupInterval = this.get(\"baseInterval\");\n\t\t}\n\n\t\tlet id = groupInterval.timeUnit + groupInterval.count;\n\t\tthis._intervalMin[id] = min;\n\t\tthis._intervalMax[id] = max;\n\t}\n\n\tprotected _getM(timeUnit: TimeUnit) {\n\t\tif (timeUnit == \"month\" || timeUnit == \"year\" || timeUnit == \"day\") {\n\t\t\treturn 1.05;\n\t\t}\n\t\treturn 1.01;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\t\tconst selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\n\t\t\tvalue = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, firstDay, utc, new Date(min), timezone).getTime();\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\tthis.setPrivateRaw(\"gridInterval\", gridInterval);\n\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tlet endValue = value + $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\n\t\t\t\tendValue = $time.round(new Date(endValue), gridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\n\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\n\n\t\t\t\tpreviousValue = value;\n\t\t\t\tvalue = endValue;\n\n\t\t\t\tif (value == previousValue) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _updateFinals(start: number, end: number) {\n\t\tthis.setPrivateRaw(\"selectionMinFinal\", this.positionToValue(start));\n\t\tthis.setPrivateRaw(\"selectionMaxFinal\", this.positionToValue(end));\n\t}\n\n\tprotected _getDelta() {\n\t\tthis._deltaMinMax = this.baseDuration() / 2;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\tconst timezone = this._root.timezone;\n\t\tconst utc = this._root.utc;\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\tlet startTime = $time.round(new Date(min), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\tendTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\tconst timezone = this._root.timezone;\n\t\tconst utc = this._root.utc;\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\tlet startTime = $time.round(new Date(max), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\tendTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number, _series: XYSeries) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif (!dataItem.open) {\n\t\t\tdataItem.open = {};\n\t\t}\n\t\tif (!dataItem.close) {\n\t\t\tdataItem.close = {};\n\t\t}\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = dataItem.open![field];\n\t\t\t\tlet endTime = dataItem.close![field];\n\t\t\t\t// this is done to save cpu, as rounding is quite expensive, especially with timezone set. \n\t\t\t\t// if value is between prev start and end, it means it didn't change, all is fine.\n\t\t\t\tif (value >= startTime && value <= endTime) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\t\t\tconst utc = this._root.utc;\n\t\t\t\t\tconst timezone = this._root.timezone\n\t\t\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\t\t\tconst count = baseInterval.count;\n\t\t\t\t\tstartTime = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tendTime = startTime + $time.getDuration(timeUnit, count * this._getM(timeUnit));\n\t\t\t\t\tendTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\n\t\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\t\tdataItem.close![field] = endTime;\n\t\t\t\t}\n\n\t\t\t\tthis._updateDates(startTime, dataItem.component as XYSeries);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tif (!$type.isNaN(value)) {\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\t\t\tconst count = baseInterval.count;\n\n\t\t\tvalue = $time.round(new Date(value), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\n\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, new Date(value), firstDay, utc, timezone);\n\t\t\tif (timezone) {\n\t\t\t\tvalue = $time.round(new Date(value + this.baseDuration() * 0.05), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\t\t\t\tduration = $time.getDateIntervalDuration(baseInterval, new Date(value + duration * location), firstDay, utc, timezone);\n\t\t\t}\n\n\t\t\treturn this.valueToPosition(value + duration * location);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * NOTE: Unless `adjustPosition` (2nd parameter) is set to `false`, the method\n\t * will adjust position by `tooltipIntervalOffset`.\n\t *\n\t * @param  position        Position\n\t * @param  adjustPosition  Adjust position\n\t * @return                 Tooltip text\n\t */\n\tpublic getTooltipText(position: number, adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tif (this.getPrivate(\"min\") != null) {\n\t\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\tlet value = this.positionToValue(position);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\n\n\t\t\t\tif (adjustPosition !== false) {\n\t\t\t\t\tdate = new Date(value + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration)\n\t\t\t\t}\n\n\t\t\t\treturn this._root.dateFormatter.format(date, this.get(\"tooltipDateFormat\", format));\n\t\t\t}\n\n\t\t}\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number, location?: number, snap?: boolean): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tif (location == null) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tlet diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (snap || series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\treturn first;\n\t\t\t}\n\n\t\t\tif (second) {\n\t\t\t\treturn second;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this._intervalDuration / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n}\n","import { useRef, useState, useEffect } from 'react';\r\nimport * as am5 from '@amcharts/amcharts5';\r\nimport * as am5xy from '@amcharts/amcharts5/xy';\r\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\r\nimport am5themes_Responsive from '@amcharts/amcharts5/themes/Responsive';\r\nimport { dateFormat, generateLotProgress, lastDateOfMonth } from '../Query';\r\nimport { lotLayer } from '../layers';\r\nimport { view } from '../Scene';\r\nimport FeatureFilter from '@arcgis/core/layers/support/FeatureFilter';\r\nimport Query from '@arcgis/core/rest/support/Query';\r\nimport {\r\n  lotHandedOverDateField,\r\n  lotHandOverDateField,\r\n  lotTargetActualField,\r\n} from '../StatusUniqueValues';\r\nimport { useDropdownContext } from './DropdownContext';\r\n\r\n// Dispose function\r\nfunction maybeDisposeRoot(divId: any) {\r\n  am5.array.each(am5.registry.rootElements, function (root) {\r\n    if (root.dom.id === divId) {\r\n      root.dispose();\r\n    }\r\n  });\r\n}\r\n\r\nconst LotProgressChart = () => {\r\n  const { municipality, barangays } = useDropdownContext();\r\n\r\n  const municipal = municipality === null ? undefined : municipality.field1;\r\n  const barangay = barangays === null ? undefined : barangays.name;\r\n\r\n  const legendRef = useRef<unknown | any | undefined>({});\r\n  const xAxisRef = useRef<unknown | any | undefined>({});\r\n  const yAxisRef = useRef<unknown | any | undefined>({});\r\n  const chartRef = useRef<unknown | any | undefined>({});\r\n  const [lotProgressData, setLotProgressData] = useState([]);\r\n\r\n  const chartID = 'lot-progress';\r\n  useEffect(() => {\r\n    generateLotProgress(municipal, barangay).then((result: any) => {\r\n      setLotProgressData(result);\r\n    });\r\n  }, [municipal, barangay]);\r\n\r\n  useEffect(() => {\r\n    maybeDisposeRoot(chartID);\r\n    var root = am5.Root.new(chartID);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    // https://www.amcharts.com/docs/v5/concepts/themes/\r\n    root.setThemes([am5themes_Animated.new(root), am5themes_Responsive.new(root)]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n    var chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panX: false,\r\n        panY: false,\r\n        wheelX: 'panX',\r\n        wheelY: 'zoomX',\r\n        paddingBottom: 35,\r\n        layout: root.verticalLayout,\r\n      }),\r\n    );\r\n    chartRef.current = chart;\r\n\r\n    let scrollbarY1 = am5xy.XYChartScrollbar.new(root, {\r\n      orientation: 'vertical',\r\n      // height: 50,\r\n      // width: 1,\r\n    });\r\n\r\n    scrollbarY1.startGrip.set('scale', 0.7);\r\n    scrollbarY1.endGrip.set('scale', 0.7);\r\n\r\n    chart.set('scrollbarY', scrollbarY1);\r\n    let scrollbarY2 = chart.get('scrollbarY');\r\n    scrollbarY2?.get('background')?.setAll({\r\n      fill: am5.color('#ffffff'),\r\n      fillOpacity: 0.2,\r\n    });\r\n\r\n    // Chart title\r\n    chart.children.unshift(\r\n      am5.Label.new(root, {\r\n        text: 'Monthly Progress & Target Schedule of Handed Over Lots',\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n        fill: am5.color('#ffffff'),\r\n        x: am5.percent(50),\r\n        centerX: am5.percent(50),\r\n        paddingTop: 0,\r\n        marginBottom: 10,\r\n      }),\r\n    );\r\n\r\n    // Add cursor\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/\r\n    var cursor = chart.set(\r\n      'cursor',\r\n      am5xy.XYCursor.new(root, {\r\n        behavior: 'zoomX',\r\n      }),\r\n    );\r\n    cursor.lineY.set('visible', false);\r\n\r\n    // Create axes\r\n    var xRenderer = am5xy.AxisRendererX.new(root, {\r\n      //minGridDistance: 60,\r\n      strokeOpacity: 1,\r\n      strokeWidth: 1,\r\n      stroke: am5.color('#ffffff'),\r\n    });\r\n\r\n    var xAxis = chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        maxDeviation: 0,\r\n        groupData: true,\r\n        baseInterval: {\r\n          timeUnit: 'day',\r\n          count: 1,\r\n        },\r\n        groupIntervals: [{ timeUnit: 'month', count: 1 }],\r\n        renderer: xRenderer,\r\n        tooltip: am5.Tooltip.new(root, {}),\r\n      }),\r\n    );\r\n\r\n    xAxis.get('renderer').labels.template.setAll({\r\n      //oversizedBehavior: \"wrap\",\r\n      textAlign: 'center',\r\n      fill: am5.color('#ffffff'),\r\n      //maxWidth: 150,\r\n      fontSize: 12,\r\n    });\r\n\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        // calculateTotals: true,\r\n        min: 0,\r\n        // max: 100,\r\n        // numberFormat: \"#'%'\",\r\n        strictMinMax: true,\r\n        renderer: am5xy.AxisRendererY.new(root, {\r\n          minGridDistance: 60,\r\n          strokeOpacity: 1,\r\n          strokeWidth: 1,\r\n          stroke: am5.color('#ffffff'),\r\n        }),\r\n      }),\r\n    );\r\n\r\n    yAxis.get('renderer').labels.template.setAll({\r\n      //oversizedBehavior: \"wrap\",//\r\n      textAlign: 'center',\r\n      fill: am5.color('#ffffff'),\r\n      //maxWidth: 150,\r\n      fontSize: 12,\r\n    });\r\n    xAxisRef.current = xAxis;\r\n    yAxisRef.current = yAxis;\r\n\r\n    // Add yaxix title\r\n    yAxis.children.unshift(\r\n      am5.Label.new(root, {\r\n        rotation: -90,\r\n        // text: 'No. of handed-over lots',\r\n        y: am5.p50,\r\n        centerX: am5.p50,\r\n        fill: am5.color('#ffffff'),\r\n        fontSize: 11,\r\n      }),\r\n    );\r\n\r\n    // Add legend\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/legend-xy-series/\r\n    var legend = chart.children.push(\r\n      am5.Legend.new(root, {\r\n        centerX: am5.p50,\r\n        centerY: am5.percent(50),\r\n        x: am5.p50,\r\n        y: am5.percent(108),\r\n        marginTop: -20,\r\n      }),\r\n    );\r\n    legendRef.current = legend;\r\n\r\n    legend.labels.template.setAll({\r\n      oversizedBehavior: 'truncate',\r\n      fill: am5.color('#ffffff'),\r\n      fontSize: 17,\r\n      scale: 0.7,\r\n      //textDecoration: \"underline\"\r\n      //width: am5.percent(200)\r\n      //fontWeight: \"300\"\r\n    });\r\n\r\n    function makeSeries(name: any, fieldName: any, color: any) {\r\n      var series = chart.series.push(\r\n        am5xy.ColumnSeries.new(root, {\r\n          name: name,\r\n          stacked: true,\r\n          xAxis: xAxis,\r\n          yAxis: yAxis,\r\n          valueYField: fieldName,\r\n          // valueYShow: 'valueYTotalPercent',\r\n          categoryXField: 'date',\r\n          valueXField: 'date',\r\n          fill: color,\r\n          stroke: color,\r\n          // valueYGrouped: 'sum',\r\n        }),\r\n      );\r\n      var highlightSelect: any;\r\n      series.columns.template.events.on('click', (ev) => {\r\n        const select: any = ev.target.dataItem?.dataContext;\r\n        const raw_date = new Date(select?.date);\r\n        const last_date = lastDateOfMonth(new Date(raw_date));\r\n        const qDate =\r\n          fieldName === 'target'\r\n            ? `${lotHandOverDateField} <= date'` + last_date + \"'\"\r\n            : `${lotHandedOverDateField} <= date'` + last_date + \"'\";\r\n\r\n        const qMunicipality = \"Municipality = '\" + municipal + \"'\";\r\n        const qBarangay = \"Barangay = '\" + barangay + \"'\";\r\n        const qMunicipalBarangay = qMunicipality + ' AND ' + qBarangay;\r\n        const status = fieldName === 'target' ? 1 : 2;\r\n        const qSelected = `${lotTargetActualField} = ` + status;\r\n\r\n        let layerViewFilter: any;\r\n\r\n        var query = lotLayer.createQuery();\r\n        if (municipal && barangay) {\r\n          query.where = qMunicipalBarangay + ' AND ' + qSelected + ' AND ' + qDate;\r\n          layerViewFilter = qMunicipalBarangay + ' AND ' + qSelected + ' AND ' + qDate;\r\n        } else if (municipal && !barangay) {\r\n          query.where = qMunicipality + ' AND ' + qSelected + ' AND ' + qDate;\r\n          layerViewFilter = qMunicipality + ' AND ' + qSelected + ' AND ' + qDate;\r\n        } else {\r\n          query.where = qSelected + ' AND ' + qDate;\r\n          layerViewFilter = qSelected + ' AND ' + qDate;\r\n        }\r\n\r\n        view.whenLayerView(lotLayer).then((layerView: any) => {\r\n          lotLayer.queryFeatures(query).then((results: any) => {\r\n            const RESULT_LENGTH = results.features;\r\n            const ROW_N = RESULT_LENGTH.length;\r\n\r\n            let objID = [];\r\n            for (var i = 0; i < ROW_N; i++) {\r\n              var obj = results.features[i].attributes.OBJECTID;\r\n              objID.push(obj);\r\n            }\r\n\r\n            var queryExt = new Query({\r\n              objectIds: objID,\r\n            });\r\n\r\n            lotLayer.queryExtent(queryExt).then(function (result) {\r\n              if (result.extent) {\r\n                view.goTo(result.extent);\r\n              }\r\n            });\r\n\r\n            if (highlightSelect) {\r\n              highlightSelect.remove();\r\n            }\r\n            highlightSelect = layerView.highlight(objID);\r\n\r\n            view.on('click', function () {\r\n              layerView.filter = new FeatureFilter({\r\n                where: undefined,\r\n              });\r\n              highlightSelect.remove();\r\n            });\r\n          });\r\n        }); // End of whenLayerView\r\n      });\r\n\r\n      series.columns.template.setAll({\r\n        tooltipText: '{name}: {valueY} ({valueYTotalPercent.formatNumber(\"#.#\")}%)',\r\n        tooltipY: am5.percent(10),\r\n      });\r\n      series.data.setAll(lotProgressData);\r\n\r\n      series.appear();\r\n\r\n      series.bullets.push(function () {\r\n        return am5.Bullet.new(root, {\r\n          sprite: am5.Label.new(root, {\r\n            text: '{valueY}',\r\n            fill: root.interfaceColors.get('alternativeText'),\r\n            centerY: am5.p50,\r\n            centerX: am5.p50,\r\n            populateText: true,\r\n          }),\r\n        });\r\n      });\r\n\r\n      legend.data.push(series);\r\n    }\r\n\r\n    makeSeries('Actual', 'actual', am5.color('#0096FF'));\r\n    makeSeries('Target', 'target', am5.color('#FF5733'));\r\n\r\n    chart.appear(1000, 100);\r\n\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, [chartID, lotProgressData]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        id={chartID}\r\n        style={{\r\n          height: '40vh',\r\n          width: '70%',\r\n          backgroundColor: '#2b2b2b',\r\n          color: 'white',\r\n          position: 'absolute',\r\n          zIndex: 99,\r\n          bottom: 10,\r\n          marginLeft: '1vw',\r\n          marginRight: 'auto',\r\n        }}\r\n      ></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LotProgressChart;\r\nfunction am5color(arg0: number) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n"],"names":["Scrollbar","Container","constructor","Object","defineProperty","this","_makeThumb","_makeButton","_addOrientationClass","_settings","themeTags","$utils","orientation","background","RoundedRectangle","new","_root","children","push","Button","get","icon","Graphics","_handleAnimation","animation","_disposers","events","on","setPrivateRaw","_thumbBusy","_afterNew","super","startGrip","endGrip","thumb","event","point","_display","toLocal","w","width","h","height","newMiddle","newCoordinate","key","y","x","duration","animate","to","easing","set","once","originalEvent","_startDown","_gripDown","_endDown","_thumbDown","undefined","_updateThumb","_updateGripsByThumb","adapters","add","value","Math","max","min","Number","_value","_updateChildren","isDirty","_sizeDirty","updateGrips","_changed","eventType","isEnabled","dispatch","type","target","start","end","grip","valueFunction","getPrivate","from","round","fromValue","toValue","call","_t","x0","x1","y0","y1","$type","isDragging","thumbSize","classNames","concat","className","XYChartScrollbar","XYChart","interactive","interactiveChildren","panX","panY","wheelX","wheelY","moveValue","states","create","opacity","plotContainer","chart","remove","removeValue","zoomOutButton","overlay","display","moveTo","lineTo","DateAxis","ValueAxis","_setBaseInterval","interval","_baseDuration","$time","_fixZoomFactor","maxZoomFactor","Infinity","baseMainDuration","_groupData","groupInterval","setRaw","_handleRangeChange","_dataGrouped","$array","series","_groupSeriesData","baseInterval","mainDataSetId","timeUnit","count","setDataSet","resetGrouping","markDirtyExtremes","_seriesDataGrouped","intervals","baseDuration","groupIntervals","_dataSets","fields","baseAxis","_valueYFields","_valueXFields","dataItems","_mainDataItems","groupCallback","groupOriginals","firstDay","locale","firstDayOfWeek","utc","timezone","newDataItem","previousTime","dataSetId","sum","groupFieldValues","workingFields","field","firstDate","prevNewDataItem","intervalDuration","Date","dataItem","dataContext","time","roundedTime","getTime","$object","DataItem","_makeDataItem","groupKey","currentValue","average","abs","_dataSetId","markDirtySize","_clearDirty","_groupingCalculated","getGroupInterval","assign","getIntervalMax","_intervalMax","getIntervalMin","_intervalMin","selectionMin","selectionMax","modifiedDifference","current","newId","fieldName","startIndex","$order","index","endIndex","endIndex2","firstDataItem","lastDataItem","lastDate","outOfSelection","setPrivate","_adjustMinMax","gridCount","_strictMode","step","_intervalDuration","_saveMinMax","id","_getM","_prepareAxisItems","renderer","i","gridInterval","nextGridUnit","format","previousValue","formats","length","_dataItems","processDataItem","_createAssets","_toggleDataItem","endValue","date","label","dateFormatter","_prepareDataItem","j","inited","_markDirtyAxes","_updateGhost","_updateFinals","positionToValue","_getDelta","_deltaMinMax","_fixMin","startTime","endTime","_fixMax","_updateDates","_date","_series","processSeriesDataItem","open","close","component","getDataItemPositionX","cellLocation","axisLocation","openValue","closeValue","_baseValue","valueToPosition","getDataItemCoordinateX","positionToCoordinate","getDataItemPositionY","getDataItemCoordinateY","roundAxisPosition","position","location","NaN","getTooltipText","adjustPosition","getSeriesItem","snap","result","diValue","first","second","shouldGap","nextItem","autoGapCount","value1","zoomToDates","zoomToValues","positionToDate","dateToPosition","getCellWidthPosition","LotProgressChart","municipality","barangays","useDropdownContext","municipal","field1","barangay","name","legendRef","useRef","xAxisRef","yAxisRef","chartRef","lotProgressData","setLotProgressData","useState","chartID","useEffect","generateLotProgress","then","_root$_logo","_scrollbarY2$get","divId","am5","rootElements","root","dom","dispose","container","clear","_logo","setThemes","am5themes_Animated","am5themes_Responsive","am5xy","paddingBottom","layout","verticalLayout","scrollbarY1","scrollbarY2","setAll","fill","fillOpacity","unshift","text","fontSize","fontWeight","textAlign","centerX","paddingTop","marginBottom","behavior","lineY","xRenderer","strokeOpacity","strokeWidth","stroke","xAxis","xAxes","maxDeviation","groupData","tooltip","labels","template","yAxis","yAxes","strictMinMax","minGridDistance","rotation","legend","centerY","marginTop","makeSeries","color","highlightSelect","stacked","valueYField","categoryXField","valueXField","columns","ev","_ev$target$dataItem","select","raw_date","last_date","lastDateOfMonth","qDate","lotHandOverDateField","lotHandedOverDateField","qMunicipality","qMunicipalBarangay","status","qSelected","lotTargetActualField","layerViewFilter","query","lotLayer","createQuery","where","view","whenLayerView","layerView","queryFeatures","results","ROW_N","features","objID","obj","attributes","OBJECTID","queryExt","Query","objectIds","queryExtent","extent","goTo","highlight","filter","FeatureFilter","tooltipText","tooltipY","data","appear","bullets","sprite","interfaceColors","populateText","oversizedBehavior","scale","_jsx","_Fragment","style","backgroundColor","zIndex","bottom","marginLeft","marginRight"],"sourceRoot":""}