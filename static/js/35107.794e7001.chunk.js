"use strict";(self.webpackChunksc_land=self.webpackChunksc_land||[]).push([[35107],{35107:(e,t,i)=>{i.r(t),i.d(t,{default:()=>q});var s=i(27366),n=i(66978),r=i(49861),o=(i(93169),i(32718)),a=(i(84936),i(69912)),l=i(33565),h=i(44927),c=i(94172),u=i(68860),d=i(79803),m=i(77671),p=(i(59486),i(52639)),v=(i(59166),i(51508),i(86950)),y=i(92026),_=i(5163),w=i(2170),g=i(15559),b=i(93655),f=i(74220),C=i(5693),M=i(52974),L=i(45900),D=i(41201),S=i(36257),T=i(585),O=i(75021),A=i(58009),Z=i(73268),k=i(16072),x=i(29909),j=i(78952);const R=1e5;let G=class extends L.m{constructor(e){super(e),this._drawActive=!1,this._measurementLayer=new b.Z({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new b.Z({internal:!0,listMode:"hide",visible:!1}),this._vertices=[],this.geodesicDistanceThreshold=null,this.measurement=null,this.measurementLabel=null}initialize(){(0,D.ME)("esri/core/t9n/Units").then((e=>{this.messages=e})),this.addHandles((0,S.qe)((async()=>{this.messages=await(0,D.ME)("esri/core/t9n/Units")})));const e=this.view;this._draw=new f.Z({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer]),e.focus(),this.addHandles([(0,c.YP)((()=>[this.unit,this.geodesicDistanceThreshold,this.messages]),(()=>{this._updatePolylines()}),c.nn),(0,c.YP)((()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor]),(()=>{if(!this._vertices.length)return;const e=this._vertices.map((e=>{let{coord:t}=e;return t}));for(const{handle:t}of this._vertices)t.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(e)}))])}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=(0,y.SC)(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=(0,y.SC)(this._measurementLayer),this._manipulatorLayer=(0,y.SC)(this._manipulatorLayer),this._resetVertices()}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}onActivate(){this._drawActive||0!==this._vertices.length||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const e=this._draw.create("polyline",{mode:"click"});e.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],(e=>this._updateSketch(e.vertices))),e.on("draw-complete",(()=>{this._stopSketch()}))}_stopSketch(){this.manipulators.forEach((e=>{let{manipulator:t}=e;t.interactive=!0})),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const{spatialReference:t}=this.view;for(;this._vertices.length>e.length;){const{handle:e,manipulator:t}=this._vertices.pop();e.remove(),this.manipulators.remove(t)}for(let a=this._vertices.length;a<e.length;a++){const[i,s]=e[a],n=U(new T.Z({x:i,y:s,spatialReference:t}),this.view,this._manipulatorLayer);this.manipulators.add(n);const r=(0,C.Xd)(n,((e,t)=>{t.next((0,C.Cf)(this.view)).next((0,C.a9)(e.graphic)).next((()=>{const t=e.graphic.geometry;this._vertices[a].coord=[t.x,t.y],this._updatePolylines()}))}));this._vertices.push({manipulator:n,coord:[i,s],handle:r})}const i=this._vertices.length-1,s=this._vertices[i],[n,r]=e[i];s.coord[0]===n&&s.coord[1]===r||(s.coord=[n,r],s.manipulator.graphic.geometry=new T.Z({x:n,y:r,spatialReference:t}));const o=this._drawActive?this._vertices[i].manipulator:null;this.manipulators.forEach((e=>{let{manipulator:t}=e;t.interactive=null==o||t!==o})),this._updatePolylines()}_updatePolylines(){var e;if(this._vertices.length<2)return void this._measurementLayer.removeAll();const t=this._vertices.map((e=>{let{coord:t}=e;return t})),{measurement:i,drawing:s,original:n}=function(e,t,i){const s=new x.Z({paths:[e],spatialReference:t});let n,r;if(t.isGeographic)if((0,g.Gb)(t))n=(0,g.Jf)([s],"meters")[0],r=(0,g.j2)(s,R);else{const e=(0,d.project)(s,j.Z.WGS84),i=(0,g.j2)(e,R);n=(0,g.Jf)([e],"meters")[0],r=(0,d.project)(i,t)}else if(t.isWebMercator)n=(0,w.geodesicLength)(s,"meters"),r=(0,w.geodesicDensify)(s,R,"meters");else{const e=(0,w.planarLength)(s,"meters");if(null!=i&&e>=i){const e=(0,d.project)(s,j.Z.WGS84),i=(0,g.j2)(e,R);n=(0,g.Jf)([e],"meters")[0],r=(0,d.project)(i,t)}else n=e,r=s}return{measurement:{geometry:r,length:n},original:s,drawing:r}}(t,this.view.spatialReference,this.geodesicDistanceThreshold);this._set("measurement",i);const r=function(e,t,i){if(!t||!e)return"";switch(i){case"metric":return(0,_.Rd)(e,t.length,"meters");case"imperial":return(0,_.Ud)(e,t.length,"meters");default:return(0,_.VG)(e,(0,u.En)(t.length,"meters",i),i)}}(this.messages,i,this.unit);let o,a;this._set("measurementLabel",r);const{graphics:l}=this._measurementLayer,h=2===l.length,{effectiveTheme:c}=this.view;h?(o=l.at(0),a=l.at(1)):(o=new p.Z({symbol:new O.Z({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",effects:[{type:"CIMGeometricEffectDashes",dashTemplate:[14,12],lineDashEnding:"FullGap",controlPointEnding:"NoConstraint"}],enable:!0,capStyle:"Butt",joinStyle:"Round",width:3.5,color:(0,v.mj)(c.accentColor).toArray()},{type:"CIMSolidStroke",enable:!0,capStyle:"Butt",joinStyle:"Round",width:5,color:c.accentColor.toArray()}]}}})}),a=new p.Z({symbol:new A.Z({color:c.textColor,haloColor:(0,v.G)((0,v.mj)(c.textColor,v.K6.Low),.5),haloSize:2,font:new Z.Z({size:14,family:"sans-serif"})})}),l.removeAll(),l.addMany([o,a])),o.geometry=s,a.geometry=null===(e=n.extent)||void 0===e?void 0:e.center,a.symbol.text=r}};function U(e,t,i){const s=(0,v.G)(t.effectiveTheme.accentColor,.5),n={type:"simple-line",width:0},r=new k.Z({style:"circle",color:s,size:8,outline:n}),o=new k.Z({style:"circle",color:s,size:12,outline:n}),a=new p.Z({geometry:e,symbol:r});return new M.L({view:t,layer:i,graphic:a,focusedSymbol:o})}(0,s._)([(0,r.Cb)()],G.prototype,"_drawActive",void 0),(0,s._)([(0,r.Cb)({readOnly:!0})],G.prototype,"cursor",null),(0,s._)([(0,r.Cb)({value:!0})],G.prototype,"editable",null),(0,s._)([(0,r.Cb)({type:Number})],G.prototype,"geodesicDistanceThreshold",void 0),(0,s._)([(0,r.Cb)({readOnly:!0})],G.prototype,"measurement",void 0),(0,s._)([(0,r.Cb)({readOnly:!0})],G.prototype,"measurementLabel",void 0),(0,s._)([(0,r.Cb)()],G.prototype,"messages",void 0),(0,s._)([(0,r.Cb)()],G.prototype,"unit",void 0),(0,s._)([(0,r.Cb)({constructOnly:!0})],G.prototype,"view",void 0),G=(0,s._)([(0,a.j)("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DTool")],G);var I=i(32845);let P=class extends I.V{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="DistanceMeasurement2DViewModel is only supported in 2D views."}initialize(){this.addHandles([(0,c.YP)((()=>{var e;return null===(e=this.view)||void 0===e?void 0:e.spatialReference}),(()=>this.clear())),(0,c.YP)((()=>this.unit),(e=>{null!=this.tool&&(this.tool.unit=e)}),c.nn),(0,c.YP)((()=>this.geodesicDistanceThreshold),(e=>{null!=this.tool&&(this.tool.geodesicDistanceThreshold=e)}),c.nn)])}get geodesicDistanceThreshold(){return this._get("geodesicDistanceThreshold")}set geodesicDistanceThreshold(e){(0,h.Mr)(o.Z.getLogger(this),"geodesicDistanceThreshold",{version:"4.29",warnOnce:!0}),this._set("geodesicDistanceThreshold",e)}get measurement(){return null!=this.tool?this.tool.measurement:null}get measurementLabel(){return null!=this.tool?this.tool.measurementLabel:null}get state(){var e;return this.disabled||null==this.view||null==(null===(e=this.view)||void 0===e?void 0:e.spatialReference)?"disabled":null!=this.tool&&this.measurement?this.tool.active?"measuring":"measured":"ready"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return u.oD}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}async start(){const e=this.view;null!=e&&(await(0,c.N1)((()=>e.ready)),function(e){if(!e)return!1;const{isGeographic:t,isWebMercator:i,isWGS84:s}=e;return t&&!s&&!(0,g.Gb)(e)||!t&&!i}(e.spatialReference)&&await(0,d.load)()),this.createTool({interactive:!0})}clear(){this.removeTool()}constructTool(){return new G({view:this.view,visible:this.visible,geodesicDistanceThreshold:this.geodesicDistanceThreshold,unit:this.unit})}_validateUnit(e){const{unitOptions:t,defaultUnit:i}=this;return null!=e&&t.includes(e)?e:t.includes(i)?i:t.length>0?t[0]:i}_validateUnits(e){if(null==e)return[];const t=e.filter((e=>u.oD.includes(e)));return 0===t.length?u.oD.slice():t}};(0,s._)([(0,r.Cb)(m.Y)],P.prototype,"defaultUnit",void 0),(0,s._)([(0,r.Cb)()],P.prototype,"geodesicDistanceThreshold",null),(0,s._)([(0,r.Cb)({readOnly:!0})],P.prototype,"measurement",null),(0,s._)([(0,r.Cb)({readOnly:!0})],P.prototype,"measurementLabel",null),(0,s._)([(0,r.Cb)({readOnly:!0})],P.prototype,"state",null),(0,s._)([(0,r.Cb)({type:String})],P.prototype,"unit",null),(0,s._)([(0,r.Cb)({type:[String]})],P.prototype,"unitOptions",null),P=(0,s._)([(0,a.j)("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DViewModel")],P);const E=P;var z=i(7021),V=i(33095),B=i(82052),H=(i(80975),i(80532)),W=i(67005);const Y="esri-distance-measurement-2d",N={base:Y,newMeasurementButton:"".concat(Y,"__clear-button"),widgetIcon:V.W.measureLine};let J=class extends l.Z{constructor(e,t){super(e,t),this.iconClass=N.widgetIcon,this.icon=null,this.messages=null,this.messagesCommon=null,this.viewModel=new E}get active(){return this.viewModel.active}get label(){var e,t;return null!==(e=null===(t=this.messages)||void 0===t?void 0:t.widgetLabel)&&void 0!==e?e:""}set label(e){this._overrideIfSome("label",e)}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{messages:e,messagesCommon:t,unit:i,unitOptions:s,viewModel:r}=this,{active:o,measurementLabel:a,state:l,supported:h}=r;return(0,W.u)("div",{"aria-label":this.messages.widgetLabel,class:this.classes(N.base,z.z.widget,z.z.panel),key:this,role:"presentation"},this.visible?(0,W.u)(B.s,{active:o,measurementItems:[{key:"distance",title:e.distance,value:a}],messages:{...e,notApplicable:t.notApplicable},newMeasurementButtonClass:N.newMeasurementButton,state:l,supported:h,unit:i,unitOptions:s,onNewMeasurementClick:()=>{(0,n.R8)(this.viewModel.start())},onUnitChange:e=>{this.unit=e}}):null)}};(0,s._)([(0,r.Cb)({readOnly:!0})],J.prototype,"active",null),(0,s._)([(0,r.Cb)()],J.prototype,"iconClass",void 0),(0,s._)([(0,r.Cb)()],J.prototype,"icon",void 0),(0,s._)([(0,r.Cb)()],J.prototype,"label",null),(0,s._)([(0,r.Cb)()],J.prototype,"uiStrings",void 0),(0,s._)([(0,r.Cb)(),(0,H.H)("esri/widgets/DistanceMeasurement2D/t9n/DistanceMeasurement2D")],J.prototype,"messages",void 0),(0,s._)([(0,r.Cb)(),(0,H.H)("esri/t9n/common")],J.prototype,"messagesCommon",void 0),(0,s._)([(0,r.Cb)()],J.prototype,"unit",null),(0,s._)([(0,r.Cb)()],J.prototype,"unitOptions",null),(0,s._)([(0,r.Cb)()],J.prototype,"view",null),(0,s._)([(0,r.Cb)({type:E})],J.prototype,"viewModel",void 0),(0,s._)([(0,r.Cb)({type:Boolean})],J.prototype,"visible",null),J=(0,s._)([(0,a.j)("esri.widgets.DistanceMeasurement2D")],J);const q=J}}]);
//# sourceMappingURL=35107.794e7001.chunk.js.map